# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Release
# on:
#   workflow_dispatch:
#     inputs:
#         release:
#             description: 'release tag'
#             required: true
on:
  workflow_dispatch:
  # push:
  #   tags:
  #     - "v*.*.*"
jobs:
  build:
    runs-on: ubuntu-latest
    # env:
    #   tag_name: ${{ github.ref == 'refs/tags/' && github.ref.replace('refs/tags/', '') }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Publish for Windows
        run: dotnet publish SyntheticGenerator/SyntheticGenerator.csproj --self-contained --configuration Release --runtime win-x64 --output ./publish/win-x64
      - name: Publish for Linux
        run: dotnet publish SyntheticGenerator/SyntheticGenerator.csproj --self-contained --configuration Release --runtime linux-x64 --output ./publish/linux-x64
      - name: Publish for Darwin (macOS)
        run: dotnet publish SyntheticGenerator/SyntheticGenerator.csproj --self-contained --configuration Release --runtime osx-x64 --output ./publish/osx-x64

      - name: zip releases
        run: |
          cd publish/win-x64
          zip -r ../win-x64.zip .
          cd ../..
          # cd publish/linux-x64
          # zip -r linux-x64.zip .
          # cd ../..
          # cd publish/osx-x64
          # zip -r osx-x64.zip .
          # cd ../..
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./publish/win-x64.zip
            ./publish/linux-x64.zip
            ./publish/osx-x64.zip
          tag_name: ${{ github.ref }}
          body: ${{ github.ref }}

    # # Upload Release Assets
    # - name: Upload Windows Asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./publish/win-x64
    #     asset_name: project-windows-x64.zip
    #     asset_content_type: application/zip

    # - name: Upload Linux Asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./publish/linux-x64
    #     asset_name: project-linux-x64.zip
    #     asset_content_type: application/zip

    # - name: Upload Darwin Asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./publish/osx-x64
    #     asset_name: project-darwin-x64.zip
    #     asset_content_type: application/zip
