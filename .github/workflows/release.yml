# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET
on:
  workflow_dispatch:
    inputs:
        release:
            description: 'release tag'
            required: true

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Publish for Windows
      run: dotnet publish --runtime win-x64 --configuration Release --output ./publish/win-x64
    - name: Publish for Linux
      run: dotnet publish --runtime linux-x64 --configuration Release --output ./publish/linux-x64
    - name: Publish for Darwin (macOS)
      run: dotnet publish --runtime osx-x64 --configuration Release --output ./publish/osx-x64

    # Create a GitHub Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.release }}
        release_name: Release ${{ github.event.inputs.release }}
        draft: false
        prerelease: false

    # Upload Release Assets
    - name: Upload Windows Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/win-x64
        asset_name: project-windows-x64.zip
        asset_content_type: application/zip

    - name: Upload Linux Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/linux-x64
        asset_name: project-linux-x64.zip
        asset_content_type: application/zip

    - name: Upload Darwin Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/osx-x64
        asset_name: project-darwin-x64.zip
        asset_content_type: application/zip
